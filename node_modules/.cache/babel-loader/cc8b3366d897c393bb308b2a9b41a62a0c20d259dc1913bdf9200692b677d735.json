{"ast":null,"code":"var _jsxFileName = \"/home/leandro305/Projetos/practical-reactjs-coding-challenges/task-list/src/components/CircularProgressBar/index.tsx\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CircularProgressBar = props => {\n  const {\n    strokeWidth,\n    sqSize,\n    percentage\n  } = props;\n  const radius = (sqSize - strokeWidth) / 2;\n  const viewBox = `0 0 ${sqSize} ${sqSize}`;\n  const dashArray = radius * Math.PI * 2;\n  const dashOffset = dashArray - dashArray * (percentage || 0) / 100;\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: sqSize,\n    height: sqSize,\n    viewBox: viewBox,\n    className: \"circular-progressbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n      className: \"circle-background\",\n      cx: sqSize / 2,\n      cy: sqSize / 2,\n      r: radius,\n      strokeWidth: `${strokeWidth}px`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n      className: \"circle-progress\",\n      cx: sqSize / 2,\n      cy: sqSize / 2,\n      r: radius,\n      strokeWidth: `${strokeWidth}px`,\n      transform: `rotate(-90 ${sqSize / 2} ${sqSize / 2})`,\n      style: {\n        strokeDasharray: dashArray,\n        strokeDashoffset: dashOffset\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = CircularProgressBar;\nexport default CircularProgressBar;\nvar _c;\n$RefreshReg$(_c, \"CircularProgressBar\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","CircularProgressBar","props","strokeWidth","sqSize","percentage","radius","viewBox","dashArray","Math","PI","dashOffset","width","height","className","children","cx","cy","r","fileName","_jsxFileName","lineNumber","columnNumber","transform","style","strokeDasharray","strokeDashoffset","_c","$RefreshReg$"],"sources":["/home/leandro305/Projetos/practical-reactjs-coding-challenges/task-list/src/components/CircularProgressBar/index.tsx"],"sourcesContent":["import { FC } from \"react\"\nimport \"./style.scss\"\n\ninterface Props {\n  strokeWidth: number\n  sqSize: number\n  percentage?: number\n}\n\nconst CircularProgressBar: FC<Props> = (props) => {\n  const { strokeWidth, sqSize, percentage } = props\n  const radius = (sqSize - strokeWidth) / 2\n  const viewBox = `0 0 ${sqSize} ${sqSize}`\n  const dashArray = radius * Math.PI * 2\n  const dashOffset = dashArray - (dashArray * (percentage || 0)) / 100\n\n  return (\n    <svg width={sqSize} height={sqSize} viewBox={viewBox} className=\"circular-progressbar\">\n      <circle\n        className=\"circle-background\"\n        cx={sqSize / 2}\n        cy={sqSize / 2}\n        r={radius}\n        strokeWidth={`${strokeWidth}px`}\n      />\n      <circle\n        className=\"circle-progress\"\n        cx={sqSize / 2}\n        cy={sqSize / 2}\n        r={radius}\n        strokeWidth={`${strokeWidth}px`}\n        transform={`rotate(-90 ${sqSize / 2} ${sqSize / 2})`}\n        style={{\n          strokeDasharray: dashArray,\n          strokeDashoffset: dashOffset,\n        }}\n      />\n    </svg>\n  )\n}\n\nexport default CircularProgressBar\n"],"mappings":";AACA,OAAO,cAAc;AAAA,SAAAA,MAAA,IAAAC,OAAA;AAQrB,MAAMC,mBAA8B,GAAIC,KAAK,IAAK;EAChD,MAAM;IAAEC,WAAW;IAAEC,MAAM;IAAEC;EAAW,CAAC,GAAGH,KAAK;EACjD,MAAMI,MAAM,GAAG,CAACF,MAAM,GAAGD,WAAW,IAAI,CAAC;EACzC,MAAMI,OAAO,GAAI,OAAMH,MAAO,IAAGA,MAAO,EAAC;EACzC,MAAMI,SAAS,GAAGF,MAAM,GAAGG,IAAI,CAACC,EAAE,GAAG,CAAC;EACtC,MAAMC,UAAU,GAAGH,SAAS,GAAIA,SAAS,IAAIH,UAAU,IAAI,CAAC,CAAC,GAAI,GAAG;EAEpE,oBACEL,OAAA;IAAKY,KAAK,EAAER,MAAO;IAACS,MAAM,EAAET,MAAO;IAACG,OAAO,EAAEA,OAAQ;IAACO,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACpFf,OAAA;MACEc,SAAS,EAAC,mBAAmB;MAC7BE,EAAE,EAAEZ,MAAM,GAAG,CAAE;MACfa,EAAE,EAAEb,MAAM,GAAG,CAAE;MACfc,CAAC,EAAEZ,MAAO;MACVH,WAAW,EAAG,GAAEA,WAAY;IAAI;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChC,eACFtB,OAAA;MACEc,SAAS,EAAC,iBAAiB;MAC3BE,EAAE,EAAEZ,MAAM,GAAG,CAAE;MACfa,EAAE,EAAEb,MAAM,GAAG,CAAE;MACfc,CAAC,EAAEZ,MAAO;MACVH,WAAW,EAAG,GAAEA,WAAY,IAAI;MAChCoB,SAAS,EAAG,cAAanB,MAAM,GAAG,CAAE,IAAGA,MAAM,GAAG,CAAE,GAAG;MACrDoB,KAAK,EAAE;QACLC,eAAe,EAAEjB,SAAS;QAC1BkB,gBAAgB,EAAEf;MACpB;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAAAK,EAAA,GA9BK1B,mBAA8B;AAgCpC,eAAeA,mBAAmB;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}